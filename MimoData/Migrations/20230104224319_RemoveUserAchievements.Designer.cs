// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MimoData.DbContexts;

#nullable disable

namespace MimoData.Migrations
{
    [DbContext(typeof(MimoContext))]
    [Migration("20230104224319_RemoveUserAchievements")]
    partial class RemoveUserAchievements
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("MimoDomain.Achievement", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Units")
                        .HasColumnType("INTEGER");

                    b.HasKey("AchievementId");

                    b.HasIndex("CourseId");

                    b.ToTable("Achievements");

                    b.HasData(
                        new
                        {
                            AchievementId = 1,
                            Name = "Complete 5 lessons",
                            Type = "Lesson",
                            Units = 5
                        },
                        new
                        {
                            AchievementId = 2,
                            Name = "Complete 25 lessons",
                            Type = "Lesson",
                            Units = 25
                        },
                        new
                        {
                            AchievementId = 3,
                            Name = "Complete 50 lessons",
                            Type = "Lesson",
                            Units = 50
                        },
                        new
                        {
                            AchievementId = 4,
                            Name = "Complete 1 chapter",
                            Type = "Chapter",
                            Units = 1
                        },
                        new
                        {
                            AchievementId = 5,
                            Name = "Complete 5 chapters",
                            Type = "Chapter",
                            Units = 5
                        },
                        new
                        {
                            AchievementId = 6,
                            CourseId = 1,
                            Name = "Complete the Swift course",
                            Type = "Course",
                            Units = 1
                        },
                        new
                        {
                            AchievementId = 7,
                            CourseId = 2,
                            Name = "Complete the Javascript course",
                            Type = "Course",
                            Units = 1
                        },
                        new
                        {
                            AchievementId = 8,
                            CourseId = 3,
                            Name = "Complete the C# course",
                            Type = "Course",
                            Units = 1
                        });
                });

            modelBuilder.Entity("MimoDomain.Chapter", b =>
                {
                    b.Property<int>("ChapterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sort")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChapterId");

                    b.HasIndex("CourseId");

                    b.ToTable("Chapters");

                    b.HasData(
                        new
                        {
                            ChapterId = 1,
                            CourseId = 1,
                            Name = "Chapter 1",
                            Sort = 1
                        },
                        new
                        {
                            ChapterId = 2,
                            CourseId = 1,
                            Name = "Chapter 2",
                            Sort = 2
                        },
                        new
                        {
                            ChapterId = 3,
                            CourseId = 2,
                            Name = "Chapter 1",
                            Sort = 1
                        },
                        new
                        {
                            ChapterId = 4,
                            CourseId = 2,
                            Name = "Chapter 2",
                            Sort = 2
                        },
                        new
                        {
                            ChapterId = 5,
                            CourseId = 3,
                            Name = "Chapter 1",
                            Sort = 1
                        },
                        new
                        {
                            ChapterId = 6,
                            CourseId = 3,
                            Name = "Chapter 2",
                            Sort = 2
                        });
                });

            modelBuilder.Entity("MimoDomain.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Name = "Swift"
                        },
                        new
                        {
                            CourseId = 2,
                            Name = "Javascript"
                        },
                        new
                        {
                            CourseId = 3,
                            Name = "C#"
                        });
                });

            modelBuilder.Entity("MimoDomain.CourseProgress", b =>
                {
                    b.Property<int>("CourseProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChapterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LessonId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime()");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CourseProgressId");

                    b.HasIndex("ChapterId");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.HasIndex("CourseId", "ChapterId", "LessonId", "UserId")
                        .IsUnique();

                    b.ToTable("CourseProgress");
                });

            modelBuilder.Entity("MimoDomain.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChapterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sort")
                        .HasColumnType("INTEGER");

                    b.HasKey("LessonId");

                    b.HasIndex("ChapterId");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            LessonId = 1,
                            ChapterId = 1,
                            Name = "Lesson 1",
                            Sort = 1
                        },
                        new
                        {
                            LessonId = 2,
                            ChapterId = 1,
                            Name = "Lesson 2",
                            Sort = 2
                        },
                        new
                        {
                            LessonId = 3,
                            ChapterId = 1,
                            Name = "Lesson 3",
                            Sort = 3
                        },
                        new
                        {
                            LessonId = 4,
                            ChapterId = 1,
                            Name = "Lesson 4",
                            Sort = 4
                        },
                        new
                        {
                            LessonId = 5,
                            ChapterId = 1,
                            Name = "Lesson 5",
                            Sort = 5
                        },
                        new
                        {
                            LessonId = 6,
                            ChapterId = 1,
                            Name = "Lesson 6",
                            Sort = 6
                        },
                        new
                        {
                            LessonId = 7,
                            ChapterId = 1,
                            Name = "Lesson 7",
                            Sort = 7
                        },
                        new
                        {
                            LessonId = 8,
                            ChapterId = 1,
                            Name = "Lesson 8",
                            Sort = 8
                        },
                        new
                        {
                            LessonId = 9,
                            ChapterId = 1,
                            Name = "Lesson 9",
                            Sort = 9
                        },
                        new
                        {
                            LessonId = 10,
                            ChapterId = 1,
                            Name = "Lesson 10",
                            Sort = 10
                        },
                        new
                        {
                            LessonId = 11,
                            ChapterId = 2,
                            Name = "Lesson 1",
                            Sort = 1
                        },
                        new
                        {
                            LessonId = 12,
                            ChapterId = 2,
                            Name = "Lesson 2",
                            Sort = 2
                        },
                        new
                        {
                            LessonId = 13,
                            ChapterId = 2,
                            Name = "Lesson 3",
                            Sort = 3
                        },
                        new
                        {
                            LessonId = 14,
                            ChapterId = 2,
                            Name = "Lesson 4",
                            Sort = 4
                        },
                        new
                        {
                            LessonId = 15,
                            ChapterId = 2,
                            Name = "Lesson 5",
                            Sort = 5
                        },
                        new
                        {
                            LessonId = 16,
                            ChapterId = 2,
                            Name = "Lesson 6",
                            Sort = 6
                        },
                        new
                        {
                            LessonId = 17,
                            ChapterId = 2,
                            Name = "Lesson 7",
                            Sort = 7
                        },
                        new
                        {
                            LessonId = 18,
                            ChapterId = 2,
                            Name = "Lesson 8",
                            Sort = 8
                        },
                        new
                        {
                            LessonId = 19,
                            ChapterId = 2,
                            Name = "Lesson 9",
                            Sort = 9
                        },
                        new
                        {
                            LessonId = 20,
                            ChapterId = 2,
                            Name = "Lesson 10",
                            Sort = 10
                        },
                        new
                        {
                            LessonId = 21,
                            ChapterId = 3,
                            Name = "Lesson 1",
                            Sort = 1
                        },
                        new
                        {
                            LessonId = 22,
                            ChapterId = 3,
                            Name = "Lesson 2",
                            Sort = 2
                        },
                        new
                        {
                            LessonId = 23,
                            ChapterId = 3,
                            Name = "Lesson 3",
                            Sort = 3
                        },
                        new
                        {
                            LessonId = 24,
                            ChapterId = 3,
                            Name = "Lesson 4",
                            Sort = 4
                        },
                        new
                        {
                            LessonId = 25,
                            ChapterId = 3,
                            Name = "Lesson 5",
                            Sort = 5
                        },
                        new
                        {
                            LessonId = 26,
                            ChapterId = 3,
                            Name = "Lesson 6",
                            Sort = 6
                        },
                        new
                        {
                            LessonId = 27,
                            ChapterId = 3,
                            Name = "Lesson 7",
                            Sort = 7
                        },
                        new
                        {
                            LessonId = 28,
                            ChapterId = 3,
                            Name = "Lesson 8",
                            Sort = 8
                        },
                        new
                        {
                            LessonId = 29,
                            ChapterId = 3,
                            Name = "Lesson 9",
                            Sort = 9
                        },
                        new
                        {
                            LessonId = 30,
                            ChapterId = 3,
                            Name = "Lesson 10",
                            Sort = 10
                        },
                        new
                        {
                            LessonId = 31,
                            ChapterId = 4,
                            Name = "Lesson 1",
                            Sort = 1
                        },
                        new
                        {
                            LessonId = 32,
                            ChapterId = 4,
                            Name = "Lesson 2",
                            Sort = 2
                        },
                        new
                        {
                            LessonId = 33,
                            ChapterId = 4,
                            Name = "Lesson 3",
                            Sort = 3
                        },
                        new
                        {
                            LessonId = 34,
                            ChapterId = 4,
                            Name = "Lesson 4",
                            Sort = 4
                        },
                        new
                        {
                            LessonId = 35,
                            ChapterId = 4,
                            Name = "Lesson 5",
                            Sort = 5
                        },
                        new
                        {
                            LessonId = 36,
                            ChapterId = 4,
                            Name = "Lesson 6",
                            Sort = 6
                        },
                        new
                        {
                            LessonId = 37,
                            ChapterId = 4,
                            Name = "Lesson 7",
                            Sort = 7
                        },
                        new
                        {
                            LessonId = 38,
                            ChapterId = 4,
                            Name = "Lesson 8",
                            Sort = 8
                        },
                        new
                        {
                            LessonId = 39,
                            ChapterId = 4,
                            Name = "Lesson 9",
                            Sort = 9
                        },
                        new
                        {
                            LessonId = 40,
                            ChapterId = 4,
                            Name = "Lesson 10",
                            Sort = 10
                        },
                        new
                        {
                            LessonId = 41,
                            ChapterId = 5,
                            Name = "Lesson 1",
                            Sort = 1
                        },
                        new
                        {
                            LessonId = 42,
                            ChapterId = 5,
                            Name = "Lesson 2",
                            Sort = 2
                        },
                        new
                        {
                            LessonId = 43,
                            ChapterId = 5,
                            Name = "Lesson 3",
                            Sort = 3
                        },
                        new
                        {
                            LessonId = 44,
                            ChapterId = 5,
                            Name = "Lesson 4",
                            Sort = 4
                        },
                        new
                        {
                            LessonId = 45,
                            ChapterId = 5,
                            Name = "Lesson 5",
                            Sort = 5
                        },
                        new
                        {
                            LessonId = 46,
                            ChapterId = 5,
                            Name = "Lesson 6",
                            Sort = 6
                        },
                        new
                        {
                            LessonId = 47,
                            ChapterId = 5,
                            Name = "Lesson 7",
                            Sort = 7
                        },
                        new
                        {
                            LessonId = 48,
                            ChapterId = 5,
                            Name = "Lesson 8",
                            Sort = 8
                        },
                        new
                        {
                            LessonId = 49,
                            ChapterId = 5,
                            Name = "Lesson 9",
                            Sort = 9
                        },
                        new
                        {
                            LessonId = 50,
                            ChapterId = 5,
                            Name = "Lesson 10",
                            Sort = 10
                        },
                        new
                        {
                            LessonId = 51,
                            ChapterId = 6,
                            Name = "Lesson 1",
                            Sort = 1
                        },
                        new
                        {
                            LessonId = 52,
                            ChapterId = 6,
                            Name = "Lesson 2",
                            Sort = 2
                        },
                        new
                        {
                            LessonId = 53,
                            ChapterId = 6,
                            Name = "Lesson 3",
                            Sort = 3
                        },
                        new
                        {
                            LessonId = 54,
                            ChapterId = 6,
                            Name = "Lesson 4",
                            Sort = 4
                        },
                        new
                        {
                            LessonId = 55,
                            ChapterId = 6,
                            Name = "Lesson 5",
                            Sort = 5
                        });
                });

            modelBuilder.Entity("MimoDomain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            FirstName = "Stratos",
                            LastName = "Paraskevaidis"
                        });
                });

            modelBuilder.Entity("MimoDomain.Achievement", b =>
                {
                    b.HasOne("MimoDomain.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("MimoDomain.Chapter", b =>
                {
                    b.HasOne("MimoDomain.Course", "Course")
                        .WithMany("Chapters")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("MimoDomain.CourseProgress", b =>
                {
                    b.HasOne("MimoDomain.Chapter", "Chapter")
                        .WithMany()
                        .HasForeignKey("ChapterId");

                    b.HasOne("MimoDomain.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MimoDomain.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId");

                    b.HasOne("MimoDomain.User", "User")
                        .WithMany("CourseProgress")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");

                    b.Navigation("Course");

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MimoDomain.Lesson", b =>
                {
                    b.HasOne("MimoDomain.Chapter", "Chapter")
                        .WithMany("Lessons")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("MimoDomain.Chapter", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("MimoDomain.Course", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("MimoDomain.User", b =>
                {
                    b.Navigation("CourseProgress");
                });
#pragma warning restore 612, 618
        }
    }
}
